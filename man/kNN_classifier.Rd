% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/knn.R
\name{kNN_classifier}
\alias{kNN_classifier}
\title{Classify a new object using k nearest neighbors.}
\usage{
kNN_classifier(data, trueClasses, memory = NULL, k = 1, p = 2,
  type = "train", columns)
}
\arguments{
\item{data}{A data frame or a matrix where rows are observations and
columns are features. If \code{type} is "train" this is training
dataset, and if it is "predict" it is test dataset.}

\item{trueClasses}{A vector with labels for each row in \code{data}
if \code{type} is "train", and with labels for each row in
\code{memory} if \code{type} is "predict".}

\item{memory}{A data frame or a matrix where rows are observations
and columns are features. If \code{type} is "train" this argument
is not needed, and if it is "predict" it is a training dataset.}

\item{k}{Number of neighbors that the classifier should use.}

\item{p}{Distance metric the classifier should use, the value can be
either 1 (Manhattan), 2 (Euclidean) or Inf (Chebyshev).}

\item{type}{Whether the goal is to train the classifier or predict
classes of new observations based on past ones. The value can be
either "train" or "predict".}

\item{columns}{Columns that containts the features (usefull in case
when one of the columns contains the true classes)}
}
\value{
A list with following elements: predictedClasses,
accuracy and errorCount.
}
\description{
Classify a new object using k nearest neighbors.
}
\examples{
# create artificial dataset

data  <- matrix(rnorm(180), ncol=3)
classes <- c(rep(0, 20), rep(1, 20), rep(2, 20))
data <- cbind(data, classes)

# executing the function
trueClasses = data[,4]
columns = 1:3

kNN_classifier(data, trueClasses, memory=NULL,
               k=1, p=2, type="train", columns)
}

